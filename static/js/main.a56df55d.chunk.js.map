{"version":3,"sources":["store/todos/reducer.js","store/index.js","store/todos/type.js","components/ItemList/components/Item/Item.js","components/ItemList/Items.js","store/todos/actions/toggleTodo/toggleTodo.js","components/DateTimeHeader/DateTimeHeader.js","components/FilterHeader/FilterHeader.js","components/AddItem/AddItem.js","store/todos/actions/addTodo/addTodo.js","App.js","serviceWorker.js","index.js"],"names":["initialState","text","completed","reducer","combineReducers","todos","state","action","type","map","todo","index","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Label","styled","div","css","Icon","Button","button","Item","onClick","Container","ItemListContainer","connect","dispatch","onTodoClick","toggleTodo","item","key","Layout","Day","Date","Created","Completed","Count","Highlight","FilterHeader","Input","input","Form","form","Submit","AddItem","props","showInput","value","toggleShowInput","bind","handleInputChange","handleFormSubmit","this","setState","s","event","target","onSubmit","preventDefault","onChange","disabled","React","Component","AddItemContainer","addTodo","App","DateTimeHeader","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a56df55d.chunk.js","sourcesContent":["import { ADD_TODO, TOGGLE_TODO } from './type';\n\nconst initialState = [{\n  text: 'exercitationem eaque sapiente',\n  completed: false,\n}, {\n  text: 'perferendis rerum quibusdam',\n  completed: false,\n}, {\n  text: 'repellendus esse quas',\n  completed: true,\n}, {\n  text: 'sed dolorem numquam',\n  completed: true,\n}];\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case ADD_TODO:\n      return [...state, {\n        text: action.text,\n        completed: false,\n      }];\n\n    case TOGGLE_TODO:\n      return state.map((todo, index) => {\n        if (index === action.index) {\n          return {\n            text: todo.text,\n            completed: !todo.completed,\n          }\n        }\n\n        return todo;\n      });\n\n    default:\n      return state;\n  }\n}","import { combineReducers, createStore } from 'redux';\nimport todos from './todos';\n\nconst reducer = combineReducers({\n  todos,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;","export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Label = styled.div`\n  ${({ completed }) => completed && css`\n    color: rgba(0, 0, 0, 0.1);\n    text-decoration: line-through;\n  `}\n`;\n\nconst Icon = styled.div`\n  margin-right: 16px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  border-radius: 100%;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid rgba(0, 0, 0, 0.1);\n\n  ${({ completed }) => completed && css`\n    border: 2px solid #38d7b2;\n    color: #38d7b2;\n  `}\n`;\n\nconst Button = styled.button`\n  text-align: left;\n  cursor: pointer;\n  outline: 0;\n  border: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 60px;\n  font-size: 1.25rem;\n  background: transparent;\n  margin-bottom: 12px;\n\n  &:hover {\n    ${Icon} {\n      border: 2px solid #38d7b2;\n    }\n  }\n`;\n\nconst Item = ({\n  text,\n  completed,\n  onClick,\n}) => (\n  <Button onClick={onClick}> \n    <div>\n      <Icon completed={completed}>{completed && <>&#10003;</>}</Icon>\n    </div>\n    <Label completed={completed}>{text}</Label>\n  </Button>\n);\n\nexport default Item;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport toggleTodo from '../../store/todos/actions/toggleTodo';\nimport Item from './components/Item';\n\nconst Container = styled.div`\n`;\n\nconst ItemList = ({\n  todos,\n  onTodoClick,\n}) => (\n  <Container> \n    {todos.map((item, index) => (\n      <Item key={index} {...item} onClick={() => onTodoClick(index)} />\n    ))}\n  </Container>\n);\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTodoClick: (index) => dispatch(toggleTodo(index)),\n});\n\nconst ItemListContainer = connect(mapStateToProps, mapDispatchToProps)(ItemList);\n\nexport default ItemListContainer;\n","import { TOGGLE_TODO } from '../../type';\n\nexport default (index) => ({\n  type: TOGGLE_TODO,\n  index,\n});\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Layout = styled.div`\n  display: flex;\n  margin-bottom: 36px;\n  font-size: 1.5rem;\n`;\n\nconst Day = styled.div`\n  font-weight: 600;\n`;\n\nconst Date = styled.div`\n  margin-left: 12px;\n`;\n\nconst Item = ({\n  text,\n  completed,\n  onClick,\n}) => (\n  <Layout> \n    <Day>Monday,</Day> \n    <Date>3 Dec</Date>\n  </Layout>\n);\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Layout = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 24px;\n`;\n\nconst Label = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n`;\n\nconst Item = styled.button`\n  padding: 0;\n  border: 0;\n  outline: 0;\n  background: transparent;\n  font-size: 1rem;\n  text-align: left;\n  cursor: pointer;\n  flex: 1;\n\n  &:hover {\n    ${Label} {\n      color: #55aef1;\n    }\n  }\n`;\n\nconst Created = styled(Item)`\n`;\n\nconst Completed = styled(Item)`\n  text-align: right;\n`;\n\nconst Count = styled.div`\n  font-size: 1.25rem;\n`;\n\nconst Highlight = styled.div`\n  width: 50px;\n  height: 4px;\n  margin-top: 8px;\n  border-radius: 0.5px;\n  background: #55aef1;\n`;\n\nconst FilterHeader = () => (\n  <Layout>\n    <Created>\n      <Count>06</Count>\n      <Label>Created tasks</Label>\n      <Highlight />\n    </Created>\n    <Completed>\n      <Count>03</Count>\n      <Label>Completed tasks</Label>\n    </Completed>\n  </Layout>\n);\n\nexport default FilterHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport addTodo from '../../store/todos/actions/addTodo';\n\nconst Container = styled.div`\n  margin-top: 36px;\n`;\n\nconst Button = styled.button`\n  outline: 0;\n  border: 0;\n  cursor: pointer;\n  background: transparent;\n  font-size: 2.25rem;\n  width: 60px;\n  height: 60px;\n  border-radius: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid #55aef1;\n  color: #55aef1;\n\n  &:hover {\n    background-color: #55aef1;\n    color: white;\n  }\n`;\n\nconst Input = styled.input`\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  outline: 0;\n  background: white;\n  width: 100%;\n  border-radius: 4px;\n  height: 60px;\n  padding: 0 24px;\n  font-size: 1.25rem;\n  box-sizing: border-box;\n`;\n\nconst Form = styled.form`\n  position: relative;\n`;\n\nconst Submit = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  justify-content: center;\n  align-items: center;\n  outline: 0;\n  border: 0;\n  padding: 0 16px;\n  background: #55aef1;\n  cursor: pointer;\n  color: white;\n  transition: box-shadow 0.3s;\n  font-size: 1.25rem;\n\n  &:disabled {\n    background: rgba(0, 0, 0, 0.3);\n    cursor: not-allowed;\n  }\n\n  &:not(:disabled):hover {\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nclass AddItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showInput: false,\n      value: '',\n    };\n\n    this.toggleShowInput = this.toggleShowInput.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  toggleShowInput() {\n    this.setState((s) => ({\n      showInput: !s.showInput,\n    }));\n  }\n\n  handleInputChange(event) {\n    const { target: { value } } = event;\n\n    this.setState({\n      value,\n    });\n  }\n\n  handleFormSubmit(event) {\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n\n    event.preventDefault();\n\n    onSubmit(value);\n\n    this.setState({\n      value: '',\n      showInput: false,\n    });\n  }\n\n  render() {\n    const { showInput, value } = this.state;\n\n    return (\n      <Container>\n        {showInput ? (\n          <Form onSubmit={this.handleFormSubmit}>\n            <Input value={value} onChange={this.handleInputChange} />\n            <Submit disabled={!value} type=\"submit\">Add</Submit>\n          </Form>\n        ): (\n          <Button onClick={this.toggleShowInput}>+</Button>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (text) => dispatch(addTodo(text)),\n})\n\nconst AddItemContainer = connect(null, mapDispatchToProps)(AddItem);\n\nexport default AddItemContainer;\n","import { ADD_TODO } from '../../type';\n\nexport default (text) => ({\n  type: ADD_TODO,\n  text,\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport ItemList from './components/ItemList';\nimport DateTimeHeader from './components/DateTimeHeader';\nimport FilterHeader from './components/FilterHeader';\nimport AddItem from './components/AddItem';\n\nconst Container = styled.div`\n  max-width: 500px;\n  margin: 100px auto;\n  background: white;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\n  margin: 24px;\n  padding: 24px;\n  border-radius: 4px;\n\n  @media screen and (min-width: 1024px) {\n    margin: 100px auto;\n    padding: 36px;\n    border-radius: 24px;\n  }\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <DateTimeHeader />\n      <FilterHeader />\n      <ItemList />\n      <AddItem />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}